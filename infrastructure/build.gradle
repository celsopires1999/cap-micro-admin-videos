buildscript {
     repositories {
         mavenCentral()
     }
     dependencies {
         classpath 'org.flywaydb:flyway-mysql:8.5.10'
     }
 }

plugins {
    id 'java-conventions'
    id 'jacoco-report-aggregation'
    id 'application'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version "1.1.7"
    id 'org.flywaydb.flyway' version '8.5.10'
}

group 'com.cap.admin.catalogo.infrastructure'

bootJar {
    archiveFileName='application.jar'
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation(libs.springdoc)

    implementation 'com.mysql:mysql-connector-j'

    implementation(libs.cloudstorage)
    implementation(libs.guava) 
    implementation 'com.google.protobuf:protobuf-java:4.31.1'

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-amqp')

    implementation('com.fasterxml.jackson.module:jackson-module-afterburner')

    testImplementation(project(path: ':domain', configuration: 'testClasses')) 

    testImplementation('org.flywaydb:flyway-core')
    testImplementation('org.flywaydb:flyway-mysql')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.amqp:spring-rabbit-test:3.2.5')

    testImplementation('org.testcontainers:testcontainers:1.21.0')
    testImplementation('org.testcontainers:mysql:1.21.0')
    testImplementation('org.testcontainers:junit-jupiter:1.21.0')

    testRuntimeOnly('com.h2database:h2')
}

flyway {
     url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://mysql:3306/adm_videos'
     user = System.getenv('FLYWAY_USER') ?: 'root'
     password = System.getenv('FLYWAY_PASS') ?: '123456'
}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")
        }

        html {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
